---

- name: Ensure Repo Folder Exists
  ansible.builtin.file:
    path: "/home/bgiarrizzo/code/Websites/{{ item.url }}"
    state: directory
  with_items: "{{ website_list }}"

- name: Clone website repositories
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: "/home/bgiarrizzo/code/Websites/{{ item.url }}"
  with_items: "{{ website_list }}"
  become: yes
  become_user: bgiarrizzo

- name: Link website repo to Nginx root
  ansible.builtin.file:
    src: "/home/bgiarrizzo/code/Websites/{{ item.url }}/src/"
    dest: "/var/www/{{ item.url }}"
    state: link
    force: yes
  with_items: "{{ website_list }}"

- name: Create Nginx Config for Websites
  ansible.builtin.template:
    src: "vhost.conf.j2"
    dest: "/etc/nginx/sites-enabled/{{ item.url }}"
  with_items: "{{ website_list }}"
  notify:
    - restart_nginx

- name: Get Let's Encrypt certificates
  ansible.builtin.command: >
    certbot certonly --nginx -d {{ item.url }}
    {% if item.url.split('.') | length == 2 %}
      -d www.{{ item.url }}
    {% endif %}
    --non-interactive --agree-tos --email {{ certbot_email }}
  with_items: "{{ website_list }}"
  notify:
    - restart_nginx

- name: Create or update cronjob for stats generation via goaccess
  ansible.builtin.cron:
    name: "Generate stats for {{ item.url }}"
    minute: "*/10"
    user: root
    job: /bin/bash -c 'd=$(date +"%Y-%m"); mkdir -p /var/www/{{ item.url }}/stats/$d && goaccess /var/log/nginx/{{ item.url }}/access.log --unknowns-as-crawlers --ignore-crawlers --log-format=COMBINED --exclude-ip=192.168.1.0-192.168.1.255 -o /var/www/{{ item.url }}/stats/$d/index.html' >> /var/log/goaccess_cron.log
  with_items: "{{ website_list }}"

- name: Ensure Nginx config is OK
  ansible.builtin.command: nginx -t
  notify:
    - restart_nginx

